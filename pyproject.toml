[project]
name = "electric-products"
version = "0.1.0"
description = "service consists info about electric goods"
authors = [
    {name = "Win.freez",email = "Win.freez@yandex.ru"}
]
readme = "README.md"
package-mode = false


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.9"

[tool.poetry.group.dev.dependencies]
fastapi = {extras = ["standart"], version = "^0.116.1"}
uvicorn = {extras = ["standart"], version = "^0.35.0"}
pydantic-settings = "^2.10.1"
sqlalchemy = "^2.0.43"


[tool.poetry.group.linters.dependencies]
ruff = "^0.12.9"
mypy = "^1.17.1"
pre-commit = "4.2.0"


[tool.poetry.group.testing.dependencies]
pytest = "^8.4.1"
pytest-asyncio = "^1.1.0"

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = [
    "E", # pycodestyle (ошибки)
    "F", # Pyflakes (базовые проверки)
    "W", # pycodestyle (предупреждения)
    "UP", # pyupgrade (автоматическое обновление синтаксиса)
    "I", # isort (сортировка импортов)
    "S", # flake8-bandit (безопасность)
    "N", # PEP8-naming
    "RUF", # Ruff-специфичные правила
    "ASYNC", # Асинхронные ошибки
    "B", # flake8-bugbear (доп. проверки)
    "PL", # Pylint (стиль и ошибки)
    "SIM", # Упрощение кода
    "LOG", # Проверка логирования
    "ARG", # Неиспользуемые аргументы
    "ANN", # Аннотации типов
    "TRY", # Обработка исключений (tryceratops)
]

ignore = [
    "TRY003", # указание сообщения в ошибке
    "RUF001", # Проверка на визуально похожие символы. (Ошибочно срабатывает на кириллице)
    "D", # pydocstyle (если не нужна проверка докстрингов)
    "TRY003", # длинный текст в описании ошибки
    "ANN401", # аннотация *args и **kwargs
    "RUF002" # Исправление русских букв на латинские
]

[tool.ruff.format]
indent-style = "space"
quote-style = "double"
line-ending = "auto"
docstring-code-format = true


[tool.mypy]
python_version = "3.12"
warn_unused_configs = true
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_untyped_decorators = false
exclude = "^tests/"
plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_typed = true